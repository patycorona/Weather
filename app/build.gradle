plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.weather'
    compileSdk 33

    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        applicationId "com.example.weather"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        //jvmTarget = '1.8'
        jvmTarget = '17'
    }
}

dependencies {

    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.android.gms:play-services-maps:$googlegms"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    implementation "com.google.firebase:firebase-analytics:$firebaseAnalytics"
    implementation "com.google.firebase:firebase-messaging:$firebaseMessaging"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$jetbrainsKotlin"

    implementation "androidx.legacy:legacy-support-v4:$supportVersion"
    implementation "androidx.cardview:cardview:$supportVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "androidx.palette:palette-ktx:$supportVersion"
    implementation "androidx.dynamicanimation:dynamicanimation:$supportVersion"
    implementation "androidx.core:core-ktx:$coreKtx"

    //Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeExtensions"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeVersion"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeVersion"

    //dagger hilt
    implementation "com.google.dagger:hilt-android:$daggerHilt"
    implementation "androidx.drawerlayout:drawerlayout:$drawerlayout"
    implementation "androidx.fragment:fragment-ktx:$fragmentktx"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt"

    // Libs for Data Store
    implementation "androidx.datastore:datastore-preferences:$dataStore"

    // courutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutines"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$daggerHiltApp"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$daggerHiltCompiler"
    androidTestImplementation "androidx.test.ext:junit:$extJUnit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$daggerHiltApp"
    "kaptTest 'com.google.dagger:hilt-compiler:$daggerHiltApp"

    //Rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxj2rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxj2rxandroid"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxrelay2"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin"

    //Network y Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxJava2Adapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$loginInterceptor"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    //airbnb
    implementation ("com.airbnb.android:lottie:$airbnbLottieVersion")

    //Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    //Optional kotlin extension and coroutines support for room
    implementation "androidx.room:room-ktx:$roomVersion"

    //Gson
    implementation "com.google.code.gson:gson:$GsonVersion"

    // For instrumentation tests
    testImplementation "junit:junit:$jUnit"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCore"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlin2Version"
    testImplementation "androidx.arch.core:core-testing:$mockitokotlin2Version"
    testImplementation("org.mockito:mockito-inline:$mockitoInLine")
}